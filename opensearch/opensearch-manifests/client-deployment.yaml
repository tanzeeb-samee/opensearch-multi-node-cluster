apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: opensearch-cluster-client-opensearch-net
  labels:
    app.kubernetes.io/name: opensearch
    app.kubernetes.io/instance: opensearch-client
    app.kubernetes.io/component: opensearch-cluster-client
spec:
  ingress:
  - from:
    - podSelector:
        matchLabels:
          opensearch-cluster-client-transport-client: "true"
  podSelector:
    matchLabels:
      opensearch-cluster-client-transport-client: "true"
---
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  name: "opensearch-cluster-client-pdb"
  labels:
    app.kubernetes.io/name: opensearch
    app.kubernetes.io/instance: opensearch-client
    app.kubernetes.io/component: opensearch-cluster-client
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: opensearch
      app.kubernetes.io/instance: opensearch-client
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: opensearch-cluster-client-config
  labels:
    app.kubernetes.io/name: opensearch
    app.kubernetes.io/instance: opensearch-client
    app.kubernetes.io/component: opensearch-cluster-client
data:
  opensearch.yml: |
    cluster.name: opensearch-cluster

    # Bind to all interfaces because we don't know what IP address Docker will assign to us.
    network.host: 0.0.0.0

    # # minimum_master_nodes need to be explicitly set when bound on a public IP
    # # set to 1 to allow single node clusters
    # discovery.zen.minimum_master_nodes: 1

    # Setting network.host to a non-loopback address enables the annoying bootstrap checks. "Single-node" mode disables them again.
    # discovery.type: single-node

    # Start OpenSearch Security Demo Configuration
    # WARNING: revise all the lines below before you go into production
    plugins:
      security:
        ssl:
          transport:
            pemcert_filepath: esnode.pem
            pemkey_filepath: esnode-key.pem
            pemtrustedcas_filepath: root-ca.pem
            enforce_hostname_verification: false
          http:
            enabled: true
            pemcert_filepath: esnode.pem
            pemkey_filepath: esnode-key.pem
            pemtrustedcas_filepath: root-ca.pem
        allow_unsafe_democertificates: true
        allow_default_init_securityindex: true
        authcz:
          admin_dn:
            - CN=kirk,OU=client,O=client,L=test,C=de
        audit.type: internal_opensearch
        enable_snapshot_restore_privilege: true
        check_snapshot_restore_write_privileges: true
        restapi:
          roles_enabled: ["all_access", "security_rest_api_access"]
        system_indices:
          enabled: true
          indices:
            [
              ".opendistro-alerting-config",
              ".opendistro-alerting-alert*",
              ".opendistro-anomaly-results*",
              ".opendistro-anomaly-detector*",
              ".opendistro-anomaly-checkpoints",
              ".opendistro-anomaly-detection-state",
              ".opendistro-reports-*",
              ".opendistro-notifications-*",
              ".opendistro-notebooks",
              ".opendistro-asynchronous-search-response*",
            ]
    ######## End OpenSearch Security Demo Configuration ########
---
kind: Service
apiVersion: v1
metadata:
  name: opensearch-cluster-client
  labels:
    app.kubernetes.io/name: opensearch
    app.kubernetes.io/instance: opensearch-client
    app.kubernetes.io/component: opensearch-cluster-client
  annotations:
    {}
spec:
  type: ClusterIP
  selector:
    app.kubernetes.io/name: opensearch
    app.kubernetes.io/instance: opensearch-client
  ports:
  - name: http
    protocol: TCP
    port: 9200
  - name: transport
    protocol: TCP
    port: 9300
---
kind: Service
apiVersion: v1
metadata:
  name: opensearch-cluster-client-headless
  labels:
    app.kubernetes.io/name: opensearch
    app.kubernetes.io/instance: opensearch-client
    app.kubernetes.io/component: opensearch-cluster-client
  annotations:
    service.alpha.kubernetes.io/tolerate-unready-endpoints: "true"
spec:
  clusterIP: None 
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/name: opensearch
    app.kubernetes.io/instance: opensearch-client
  ports:
  - name: http
    port: 9200
  - name: transport
    port: 9300
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: opensearch-cluster-client
  labels:
    app.kubernetes.io/name: opensearch
    app.kubernetes.io/instance: opensearch-client
    app.kubernetes.io/component: opensearch-cluster-client
  annotations:
    majorVersion: "1"
spec:
  serviceName: opensearch-cluster-client-headless
  selector:
    matchLabels:
      app.kubernetes.io/name: opensearch
      app.kubernetes.io/instance: opensearch-client
  replicas: 3
  podManagementPolicy: Parallel
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      name: "opensearch-cluster-client"
      labels:
        app.kubernetes.io/name: opensearch
        app.kubernetes.io/instance: opensearch-client
        app.kubernetes.io/component: opensearch-cluster-client
    spec:
      securityContext:
        fsGroup: 1000
        runAsUser: 1000
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 1
            podAffinityTerm:
              topologyKey: kubernetes.io/hostname
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/instance
                  operator: In
                  values:
                  - opensearch-client
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - opensearch
      terminationGracePeriodSeconds: 120
      volumes:
      - name: config
        configMap:
          name: opensearch-cluster-client-config
      enableServiceLinks: true
      initContainers:
      - name: fsgroup-volume
        image: "busybox:latest"
        command: ['sh', '-c']
        args:
          - 'chown -R 1000:1000 /usr/share/opensearch/data'
        securityContext:
          runAsUser: 0
      containers:
      - name: "opensearch"
        securityContext:
          capabilities:
            drop:
            - ALL
          runAsNonRoot: true
          runAsUser: 1000
        image: "opensearchproject/opensearch:1.1.0"
        imagePullPolicy: "IfNotPresent"
        ports:
        - name: http
          containerPort: 9200
        - name: transport
          containerPort: 9300
        resources:
          requests:
            cpu: 1000m
            memory: 100Mi
        env:
        - name: node.name
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: discovery.seed_hosts
          value: "opensearch-cluster-master-headless"
        - name: cluster.name
          value: "opensearch-cluster"
        - name: network.host
          value: "0.0.0.0"
        - name: OPENSEARCH_JAVA_OPTS
          value: "-Xmx512M -Xms512M"
        - name: node.roles
          value: ""
        volumeMounts:
        - name: config
          mountPath: /usr/share/opensearch/config/opensearch.yml
          subPath: opensearch.yml
